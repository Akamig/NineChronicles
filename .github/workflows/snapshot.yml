on:
  push: []
name: Snapshot Manager

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os:
        - macos-latest
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - run: |
        if [[ "$RUNNER_OS" = "macOS" ]]; then
          rid=osx-x64
        elif [[ "$RUNNER_OS" = "Windows" ]]; then
          rid=win-x64
        else
          echo "Invalid RUNNER_OS: $RUNNER_OS" > /dev/stderr
          exit 1
        fi
        pushd tools/snapshot/
        dotnet publish -r "$rid" -c Release -o bin/
        ls -al bin/
        rm -rf bin/Release/
        popd
      shell: bash
    - uses: actions/upload-artifact@v1
      with:
        name: bin-${{ matrix.os }}
        path: tools/snapshot/bin/
    - if: matrix.os == 'macos-latest'
      run: |
        pushd tools/snapshot/bin
        tar cvfz ../../../9c-snapshot.osx-x64.tar.gz *
        popd
    - if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive `
          -Path tools\snapshot\bin\* `
          -DestinationPath 9c-snapshot.win-x64.zip
      shell: powershell
    - if: matrix.os == 'macos-latest'
      run: brew install awscli
    - if: matrix.os == 'windows-latest'
      run: choco install awscli
    - run: |
        if [[ "$RUNNER_OS" = "Windows" ]]; then
          export PATH="/c/Program Files/Amazon/AWSCLI/bin:$PATH"
        fi
        aws s3 cp \
          --acl public-read \
          9c-snapshot.* \
          "s3://${{ secrets.AWS_S3_BUCKET }}/"
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}