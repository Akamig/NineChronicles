on:
  push:
    branches:
      - master
      - 9c-alpha-*
      - 9c-beta-*
    tags:
      - '*'

name: Pack

jobs:
  build-unity:
    name: Build Unity
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - uses: docker://gableroux/unity3d:2019.1.0f2
      env:
        ULF: ${{ secrets.ULF }}
        APV_SIGNING_PRIVATE_KEY: ${{ secrets.APV_SIGNING_PRIVATE_KEY }}
      with:
        entrypoint: scripts/build-development.sh
        args: MacOS
    - uses: docker://gableroux/unity3d:2019.1.0f2
      env:
        ULF: ${{ secrets.ULF }}
        APV_SIGNING_PRIVATE_KEY: ${{ secrets.APV_SIGNING_PRIVATE_KEY }}
      with:
        entrypoint: scripts/build-development.sh
        args: Windows
    # GitHub Actions의 아티펙트 기능을 쓰면 권한 등의 속성이 다 날아감.
    # 그런 파일 속성들을 보존할 수 있는 타볼 형식으로 한 번 감싸야 함.
    # https://github.com/actions/upload-artifact/issues/38
    - run: |
        pushd nekoyume/Build/
        tar cvf /tmp/unity.tar ./*
        popd
    - uses: actions/upload-artifact@master
      with:
        name: unity.tar
        path: /tmp/unity.tar

  build-launcher:
    strategy:
      matrix:
        os: [windows-2019, macos-10.15]
    name: "Build Launcher (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.201'
    - run: |
        set -evx
        if [[ "${{ matrix.os }}" = windows-* ]]; then
          rid=win-x64
          # FIXME: https://github.com/planetarium/nekoyume-unity/issues/1864
          choco install wget
          dotnet nuget remove source "Microsoft Visual Studio Offline Packages"
          dotnet nuget list source
        elif [[ "${{ matrix.os }}" = macos-* ]]; then
          rid=osx-x64
        else
          echo "Unspected platform: ${{ matrix.os }}" > /dev/stderr
          exit 1
        fi
        dotnet publish \
          --output launcher-bin/ \
          --runtime "$rid" \
          --configuration=Release \
          -p:PublishSingleFile=true \
          NineChronicles.Launcher/Launcher/Launcher.csproj
      shell: bash
    # GitHub Actions의 아티펙트 기능을 쓰면 권한 등의 속성이 다 날아감.
    # 그런 파일 속성들을 보존할 수 있는 타볼 형식으로 한 번 감싸야 함.
    # https://github.com/actions/upload-artifact/issues/38
    - run: |
        set -evx
        pushd launcher-bin/
        tar cvf ../launcher-${{ matrix.os }}.tar ./*
        popd
      shell: bash
    - uses: actions/upload-artifact@master
      with:
        name: launcher-${{ matrix.os }}.tar
        path: launcher-${{ matrix.os }}.tar

  package:
    name: Package everything
    needs: [build-unity, build-launcher]
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@master
      with:
        name: unity.tar
        path: /tmp/
    - uses: actions/download-artifact@master
      with:
        name: launcher-windows-2019.tar
        path: /tmp/
    - uses: actions/download-artifact@master
      with:
        name: launcher-macos-10.15.tar
        path: /tmp/
    - run: |
        set -evx
        brew update
        brew install tree
        tree -afp /tmp/
        for d in unity launcher-windows-2019 launcher-macos-10.15; do
          mkdir -p "/tmp/$d/"
          pushd "/tmp/$d/"
          tar xvf "/tmp/$d.tar"
          popd
        done
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.201'
    - run: |
        set -evx
        mkdir -p $HOME/.local/bin
        npm config set prefix $HOME/.local/bin
        export PATH="$HOME/.local/bin:$PATH"
        npm install --global strip-json-comments-cli

        dotnet tool install \
          --global \
          --version 0.9.0-dev.20200402054713 \
          Libplanet.Tools

        # macOS 내장 date는 ISO 8601 서식 옵션이 따로 없음
        timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

        # TentuPlay 설정 파일 만들기
        sed 's|__API_KEY__|${{ secrets.TENTU_API_KEY }}|' \
          .github/data/TentuPlaySettings.asset.template \
          | sed 's|__SECRET__|${{ secrets.TENTU_SECRET }}|' \
          | sed 's|__DEBUG__|0|' \
          | sed 's|__USE_PERSIST_DB_CONN__|0|' \
          | sed 's|__AUTO_UPLOAD__|1|' \
          > nekoyume/Assets/TentuPlay/Resources/TentuPlaySettings.asset

        .github/bin/pack.sh \
          /tmp/package \
          Windows \
          /tmp/unity/Windows/ \
          /tmp/launcher-windows-2019/ \
          "${{ secrets.APV_SIGNING_PRIVATE_KEY }}" \
          "$timestamp"

        .github/bin/pack.sh \
          /tmp/package \
          macOS \
          /tmp/unity/MacOS/ \
          /tmp/launcher-macos-10.15/ \
          "${{ secrets.APV_SIGNING_PRIVATE_KEY }}" \
          "$timestamp"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
    - uses: actions/upload-artifact@master
      with:
        name: package
        path: /tmp/package
